Index: src/test/java/com/murex/retail/experience/ComputerComponentFactoryTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.murex.retail.experience;\r\nimport static org.junit.jupiter.api.Assertions.assertEquals;\r\nimport org.junit.jupiter.api.Test;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class ComputerComponentFactoryTest {\r\n\r\n    @Test\r\n    void test_having_unknown_category(){\r\n        String csvList[] = {\"a\", \"TEST\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\",\"2\", \"3\"};\r\n        ComputerComponent cc = ComputerComponentFactory.getComputerComponent(csvList);\r\n        List<ComputerComponent> actualResult = new ArrayList<ComputerComponent>();\r\n        actualResult.add(cc);\r\n        assertEquals(null, cc);\r\n    }\r\n\r\n    @Test\r\n    void test_CPU_class(){\r\n        List<ComputerComponent> listOfObjects = new ArrayList<>();\r\n        String[] csvList = {\"a\", \"CPU\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\",\"2\", \"3\"};\r\n        ComputerComponent cc = ComputerComponentFactory.getComputerComponent(csvList);\r\n        listOfObjects.add(cc);\r\n        assertEquals(\"a\", cc.getId());\r\n        assertEquals(\"CPU\", cc.getCategory());\r\n        assertEquals(\"c\", cc.getName());\r\n        assertEquals(\"d\", cc.getBrand());\r\n        assertEquals(\"e\", cc.getProductLine());\r\n        assertEquals(\"f\", cc.getNumOfCores());\r\n        assertEquals(\"g\", cc.getProcessorClockSpeed());\r\n        assertEquals(\"h\", cc.getGraphicClockSpeed());\r\n        assertEquals(2, cc.getPrice());\r\n        assertEquals(3, cc.getQuantity());\r\n        assertEquals(\"a\\tCPU\\tc\\td\\te\\tf\\tg\\th\\t2\\t3\\n\", cc.toString());\r\n    }\r\n    @Test\r\n    void test_GPU_class(){\r\n        List<ComputerComponent> listOfObjects = new ArrayList<>();\r\n        String[] csvList = {\"a\", \"GPU\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\",\"2\", \"3\"};\r\n        ComputerComponent cc = ComputerComponentFactory.getComputerComponent(csvList);\r\n        listOfObjects.add(cc);\r\n        assertEquals(\"a\", cc.getId());\r\n        assertEquals(\"GPU\", cc.getCategory());\r\n        assertEquals(\"c\", cc.getName());\r\n        assertEquals(\"d\", cc.getBrand());\r\n        assertEquals(\"e\", cc.getProductLine());\r\n        assertEquals(\"f\", cc.getNumOfCores());\r\n        assertEquals(\"g\", cc.getProcessorClockSpeed());\r\n        assertEquals(\"h\", cc.getGraphicClockSpeed());\r\n        assertEquals(2, cc.getPrice());\r\n        assertEquals(3, cc.getQuantity());\r\n        assertEquals(\"a\\tGPU\\tc\\td\\te\\tf\\tg\\th\\t2\\t3\\n\", cc.toString());\r\n    }\r\n    @Test\r\n    void test_Monitor_class(){\r\n        List<ComputerComponent> listOfObjects = new ArrayList<>();\r\n        String[] csvList = {\"a\", \"Monitor\", \"c\", \"d\",\"N/A\", \"N/A\", \"N/A\", \"N/A\", \"e\", \"f\", \"g\", \"N/A\", \"N/A\",\"2\", \"3\"};\r\n        ComputerComponent cc = ComputerComponentFactory.getComputerComponent(csvList);\r\n        listOfObjects.add(cc);\r\n        assertEquals(\"a\", cc.getId());\r\n        assertEquals(\"Monitor\", cc.getCategory());\r\n        assertEquals(\"c\", cc.getName());\r\n        assertEquals(\"d\", cc.getBrand());\r\n        assertEquals(\"e\", cc.getDimension());\r\n        assertEquals(\"f\", cc.getResolution());\r\n        assertEquals(\"g\", cc.getColour());\r\n        assertEquals(2, cc.getPrice());\r\n        assertEquals(3, cc.getQuantity());\r\n        assertEquals(\"a\\tMonitor\\tc\\td\\te\\tf\\tg\\t2\\t3\\n\", cc.toString());\r\n    }\r\n\r\n    @Test\r\n    void test_Keyboard_class(){\r\n        List<ComputerComponent> listOfObjects = new ArrayList<>();\r\n        String[] csvList = {\"a\", \"Keyboard\", \"c\", \"d\",\"N/A\", \"N/A\", \"N/A\", \"N/A\", \"e\", \"N/A\", \"g\", \"N/A\", \"N/A\",\"2\", \"3\"};\r\n        ComputerComponent cc = ComputerComponentFactory.getComputerComponent(csvList);\r\n        listOfObjects.add(cc);\r\n        assertEquals(\"a\", cc.getId());\r\n        assertEquals(\"Keyboard\", cc.getCategory());\r\n        assertEquals(\"c\", cc.getName());\r\n        assertEquals(\"d\", cc.getBrand());\r\n        assertEquals(\"e\", cc.getDimension());\r\n        assertEquals(\"g\", cc.getColour());\r\n        assertEquals(2, cc.getPrice());\r\n        assertEquals(3, cc.getQuantity());\r\n        assertEquals(\"a\\tKeyboard\\tc\\td\\te\\tg\\t2\\t3\\n\", cc.toString());\r\n    }\r\n    @Test\r\n    void test_Mouse_class(){\r\n        List<ComputerComponent> listOfObjects = new ArrayList<>();\r\n        String[] csvList = {\"a\", \"Mouse\", \"c\", \"d\",\"N/A\", \"N/A\", \"N/A\", \"N/A\", \"e\", \"N/A\", \"g\", \"N/A\", \"N/A\",\"2\", \"3\"};\r\n        ComputerComponent cc = ComputerComponentFactory.getComputerComponent(csvList);\r\n        listOfObjects.add(cc);\r\n        assertEquals(\"a\", cc.getId());\r\n        assertEquals(\"Mouse\", cc.getCategory());\r\n        assertEquals(\"c\", cc.getName());\r\n        assertEquals(\"d\", cc.getBrand());\r\n        assertEquals(\"e\", cc.getDimension());\r\n        assertEquals(\"g\", cc.getColour());\r\n        assertEquals(2, cc.getPrice());\r\n        assertEquals(3, cc.getQuantity());\r\n        assertEquals(\"a\\tMouse\\tc\\td\\te\\tg\\t2\\t3\\n\", cc.toString());\r\n    }\r\n    @Test\r\n    void test_Memory_class(){\r\n        List<ComputerComponent> listOfObjects = new ArrayList<>();\r\n        String[] csvList = {\"a\", \"Memory\", \"c\", \"d\",\"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\",\"e\",\"f\",\"2\", \"3\"};\r\n        ComputerComponent cc = ComputerComponentFactory.getComputerComponent(csvList);\r\n        listOfObjects.add(cc);\r\n        assertEquals(\"a\", cc.getId());\r\n        assertEquals(\"Memory\", cc.getCategory());\r\n        assertEquals(\"c\", cc.getName());\r\n        assertEquals(\"d\", cc.getBrand());\r\n        assertEquals(\"e\", cc.getIntrfce());\r\n        assertEquals(\"f\", cc.getSize());\r\n        assertEquals(2, cc.getPrice());\r\n        assertEquals(3, cc.getQuantity());\r\n        assertEquals(\"a\\tMemory\\tc\\td\\te\\tf\\t2\\t3\\n\", cc.toString());\r\n    }\r\n    @Test\r\n    void test_Storage_class(){\r\n        List<ComputerComponent> listOfObjects = new ArrayList<>();\r\n        String[] csvList = {\"a\", \"Storage\", \"c\", \"d\",\"N/A\", \"N/A\", \"N/A\", \"N/A\", \"e\", \"N/A\", \"N/A\",\"f\",\"g\",\"2\", \"3\"};\r\n        ComputerComponent cc = ComputerComponentFactory.getComputerComponent(csvList);\r\n        listOfObjects.add(cc);\r\n        assertEquals(\"a\", cc.getId());\r\n        assertEquals(\"Storage\", cc.getCategory());\r\n        assertEquals(\"c\", cc.getName());\r\n        assertEquals(\"d\", cc.getBrand());\r\n        assertEquals(\"e\", cc.getDimension());\r\n        assertEquals(\"f\", cc.getIntrfce());\r\n        assertEquals(\"g\", cc.getSize());\r\n        assertEquals(2, cc.getPrice());\r\n        assertEquals(3, cc.getQuantity());\r\n        assertEquals(\"a\\tStorage\\tc\\td\\te\\tf\\tg\\t2\\t3\\n\", cc.toString());\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/murex/retail/experience/ComputerComponentFactoryTest.java	(revision 02ca71fe3d0fe3821608ee37467a93251be7ae10)
+++ src/test/java/com/murex/retail/experience/ComputerComponentFactoryTest.java	(date 1581591225939)
@@ -21,17 +21,19 @@
         String[] csvList = {"a", "CPU", "c", "d", "e", "f", "g", "h", "N/A", "N/A", "N/A", "N/A", "N/A","2", "3"};
         ComputerComponent cc = ComputerComponentFactory.getComputerComponent(csvList);
         listOfObjects.add(cc);
-        assertEquals("a", cc.getId());
-        assertEquals("CPU", cc.getCategory());
-        assertEquals("c", cc.getName());
-        assertEquals("d", cc.getBrand());
-        assertEquals("e", cc.getProductLine());
-        assertEquals("f", cc.getNumOfCores());
-        assertEquals("g", cc.getProcessorClockSpeed());
-        assertEquals("h", cc.getGraphicClockSpeed());
-        assertEquals(2, cc.getPrice());
-        assertEquals(3, cc.getQuantity());
-        assertEquals("a\tCPU\tc\td\te\tf\tg\th\t2\t3\n", cc.toString());
+       assertEquals(CPU.class ,cc.getClass());
+
+//        assertEquals("a", cc.getId());
+//        assertEquals("CPU", cc.getCategory());
+//        assertEquals("c", cc.getName());
+//        assertEquals("d", cc.getBrand());
+//        assertEquals("e", cc.getProductLine());
+//        assertEquals("f", cc.getNumOfCores());
+//        assertEquals("g", cc.getProcessorClockSpeed());
+//        assertEquals("h", cc.getGraphicClockSpeed());
+//        assertEquals(2, cc.getPrice());
+//        assertEquals(3, cc.getQuantity());
+//        assertEquals("a\tCPU\tc\td\te\tf\tg\th\t2\t3\n", cc.toString());
     }
     @Test
     void test_GPU_class(){
